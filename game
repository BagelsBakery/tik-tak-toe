<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic Tac Toe</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            margin: 0;
            padding: 0;
        }
        h1 {
            margin-top: 20px;
        }
        #board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-gap: 5px;
            margin-top: 20px;
        }
        .cell {
            width: 100px;
            height: 100px;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 24px;
            border: 1px solid #333;
            cursor: pointer;
        }
        .cell.taken {
            pointer-events: none;
        }
        #message {
            margin-top: 20px;
            font-size: 18px;
        }
    </style>
</head>
<body>
    <h1>Tic Tac Toe</h1>
    <div id="board">
        <div class="cell" data-index="0"></div>
        <div class="cell" data-index="1"></div>
        <div class="cell" data-index="2"></div>
        <div class="cell" data-index="3"></div>
        <div class="cell" data-index="4"></div>
        <div class="cell" data-index="5"></div>
        <div class="cell" data-index="6"></div>
        <div class="cell" data-index="7"></div>
        <div class="cell" data-index="8"></div>
    </div>
    <div id="message"></div>

    <script>
        const board = document.getElementById('board');
        const message = document.getElementById('message');
        const cells = document.querySelectorAll('.cell');

        let currentPlayer = 'X';
        const winningCombinations = [
            [0, 1, 2],
            [3, 4, 5],
            [6, 7, 8],
            [0, 3, 6],
            [1, 4, 7],
            [2, 5, 8],
            [0, 4, 8],
            [2, 4, 6]
        ];

        function checkWin(player) {
            return winningCombinations.some(combination => {
                return combination.every(index => {
                    return cells[index].textContent === player;
                });
            });
        }

        function checkDraw() {
            return [...cells].every(cell => cell.textContent !== '');
        }

        function computerMove() {
            const emptyCells = [...cells].filter(cell => cell.textContent === '');
            if (emptyCells.length === 0) return;

            const randomCell = emptyCells[Math.floor(Math.random() * emptyCells.length)];
            randomCell.textContent = 'O';
            randomCell.classList.add('taken');

            if (checkWin('O')) {
                message.textContent = `Computer wins! Your code is: 1808`;
                board.removeEventListener('click', handleClick);
            } else if (checkDraw()) {
                message.textContent = 'It\'s a draw!';
            }
        }

        function handleClick(event) {
            const cell = event.target;

            if (!cell.textContent) {
                cell.textContent = 'X';
                cell.classList.add('taken');

                if (checkWin('X')) {
                    message.textContent = `Player X wins! Your code is: 1808`;
                    board.removeEventListener('click', handleClick);
                } else if (checkDraw()) {
                    message.textContent = 'It\'s a draw!';
                } else {
                    computerMove();
                }
            }
        }

        board.addEventListener('click', handleClick);
    </script>
</body>
</html>
